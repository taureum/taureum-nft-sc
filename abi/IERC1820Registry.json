{
  "contractName": "IERC1820Registry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "InterfaceImplementerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagerChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "setInterfaceImplementer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_interfaceHash",
          "type": "bytes32"
        }
      ],
      "name": "getInterfaceImplementer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "interfaceName",
          "type": "string"
        }
      ],
      "name": "interfaceHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "updateERC165Cache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165Interface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165InterfaceNoCache",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.\",\"kind\":\"dev\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`. See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/00_TauDefi/github/taudefi-nft/contracts/lib/utils/introspection/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/00_TauDefi/github/taudefi-nft/contracts/lib/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x16d7b4705906e6c713fa98787b52a753245700f069aafdfdd3ac9b729bf6f0f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e94b01ae738d6d013b1f2cba19cc0dd4b4222c42de9e9bc31a94e1b08f4afb4\",\"dweb:/ipfs/QmNrSKs5DdJcWpt2cBqhy22f7yHFWDbLtpoJgykiJj4n1s\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the global ERC1820 Registry, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\r\n * implementers for interfaces in this registry, as well as query support.\r\n *\r\n * Implementers may be shared by multiple accounts, and can also implement more\r\n * than a single interface for each account. Contracts can implement interfaces\r\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\r\n * contract.\r\n *\r\n * {IERC165} interfaces can also be queried via the registry.\r\n *\r\n * For an in-depth explanation and source code analysis, see the EIP text.\r\n */\r\ninterface IERC1820Registry {\r\n    /**\r\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\r\n     * account is able to set interface implementers for it.\r\n     *\r\n     * By default, each account is its own manager. Passing a value of `0x0` in\r\n     * `newManager` will reset the manager to this initial state.\r\n     *\r\n     * Emits a {ManagerChanged} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be the current manager for `account`.\r\n     */\r\n    function setManager(address account, address newManager) external;\r\n\r\n    /**\r\n     * @dev Returns the manager for `account`.\r\n     *\r\n     * See {setManager}.\r\n     */\r\n    function getManager(address account) external view returns (address);\r\n\r\n    /**\r\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\r\n     * `interfaceHash`.\r\n     *\r\n     * `account` being the zero address is an alias for the caller's address.\r\n     * The zero address can also be used in `implementer` to remove an old one.\r\n     *\r\n     * See {interfaceHash} to learn how these are created.\r\n     *\r\n     * Emits an {InterfaceImplementerSet} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be the current manager for `account`.\r\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\r\n     * end in 28 zeroes).\r\n     * - `implementer` must implement {IERC1820Implementer} and return true when\r\n     * queried for support, unless `implementer` is the caller. See\r\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\r\n     */\r\n    function setInterfaceImplementer(address account, bytes32 _interfaceHash, address implementer) external;\r\n\r\n    /**\r\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\r\n     * implementer is registered, returns the zero address.\r\n     *\r\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\r\n     * zeroes), `account` will be queried for support of it.\r\n     *\r\n     * `account` being the zero address is an alias for the caller's address.\r\n     */\r\n    function getInterfaceImplementer(address account, bytes32 _interfaceHash) external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\r\n     * corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\r\n     */\r\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\r\n\r\n    /**\r\n     * @notice Updates the cache with whether the contract implements an ERC165 interface or not.\r\n     * @param account Address of the contract for which to update the cache.\r\n     * @param interfaceId ERC165 interface for which to update the cache.\r\n     */\r\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\r\n\r\n    /**\r\n     * @notice Checks whether a contract implements an ERC165 interface or not.\r\n     * If the result is not cached a direct lookup on the contract address is performed.\r\n     * If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\r\n     * {updateERC165Cache} with the contract address.\r\n     * @param account Address of the contract to check.\r\n     * @param interfaceId ERC165 interface to check.\r\n     * @return True if `account` implements `interfaceId`, false otherwise.\r\n     */\r\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\r\n\r\n    /**\r\n     * @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\r\n     * @param account Address of the contract to check.\r\n     * @param interfaceId ERC165 interface to check.\r\n     * @return True if `account` implements `interfaceId`, false otherwise.\r\n     */\r\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\r\n\r\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\r\n\r\n    event ManagerChanged(address indexed account, address indexed newManager);\r\n}\r\n",
  "sourcePath": "D:\\00_TauDefi\\github\\taudefi-nft\\contracts\\lib\\utils\\introspection\\IERC1820Registry.sol",
  "ast": {
    "absolutePath": "/D/00_TauDefi/github/taudefi-nft/contracts/lib/utils/introspection/IERC1820Registry.sol",
    "exportedSymbols": {
      "IERC1820Registry": [
        12633
      ]
    },
    "id": 12634,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12545,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:87"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 12546,
          "nodeType": "StructuredDocumentation",
          "src": "62:632:87",
          "text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
        },
        "fullyImplemented": false,
        "id": 12633,
        "linearizedBaseContracts": [
          12633
        ],
        "name": "IERC1820Registry",
        "nameLocation": "706:16:87",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 12547,
              "nodeType": "StructuredDocumentation",
              "src": "730:457:87",
              "text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
            },
            "functionSelector": "5df8122f",
            "id": 12554,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setManager",
            "nameLocation": "1202:10:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12549,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1221:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12554,
                  "src": "1213:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12551,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "1238:10:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12554,
                  "src": "1230:18:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1212:37:87"
            },
            "returnParameters": {
              "id": 12553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1258:0:87"
            },
            "scope": 12633,
            "src": "1193:66:87",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12555,
              "nodeType": "StructuredDocumentation",
              "src": "1267:94:87",
              "text": " @dev Returns the manager for `account`.\n See {setManager}."
            },
            "functionSelector": "3d584063",
            "id": 12562,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getManager",
            "nameLocation": "1376:10:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12557,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1395:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12562,
                  "src": "1387:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1386:17:87"
            },
            "returnParameters": {
              "id": 12561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12560,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12562,
                  "src": "1427:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1426:9:87"
            },
            "scope": 12633,
            "src": "1367:69:87",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12563,
              "nodeType": "StructuredDocumentation",
              "src": "1444:834:87",
              "text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "29965a1d",
            "id": 12572,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInterfaceImplementer",
            "nameLocation": "2293:23:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12565,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2325:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12572,
                  "src": "2317:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2317:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12567,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2342:14:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12572,
                  "src": "2334:22:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12566,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2334:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12569,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "2366:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12572,
                  "src": "2358:19:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2358:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2316:62:87"
            },
            "returnParameters": {
              "id": 12571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2387:0:87"
            },
            "scope": 12633,
            "src": "2284:104:87",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12573,
              "nodeType": "StructuredDocumentation",
              "src": "2396:390:87",
              "text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
            },
            "functionSelector": "aabbb8ca",
            "id": 12582,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInterfaceImplementer",
            "nameLocation": "2801:23:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12575,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2833:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12582,
                  "src": "2825:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2825:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12577,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2850:14:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12582,
                  "src": "2842:22:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12576,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2842:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2824:41:87"
            },
            "returnParameters": {
              "id": 12581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12580,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12582,
                  "src": "2889:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2889:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2888:9:87"
            },
            "scope": 12633,
            "src": "2792:106:87",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12583,
              "nodeType": "StructuredDocumentation",
              "src": "2906:200:87",
              "text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
            },
            "functionSelector": "65ba36c1",
            "id": 12590,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "interfaceHash",
            "nameLocation": "3121:13:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12585,
                  "mutability": "mutable",
                  "name": "interfaceName",
                  "nameLocation": "3151:13:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12590,
                  "src": "3135:29:87",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12584,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3134:31:87"
            },
            "returnParameters": {
              "id": 12589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12588,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12590,
                  "src": "3189:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12587,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3188:9:87"
            },
            "scope": 12633,
            "src": "3112:86:87",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12591,
              "nodeType": "StructuredDocumentation",
              "src": "3206:264:87",
              "text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
            },
            "functionSelector": "a41e7d51",
            "id": 12598,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateERC165Cache",
            "nameLocation": "3485:17:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12593,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3511:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12598,
                  "src": "3503:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3503:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12595,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3527:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12598,
                  "src": "3520:18:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 12594,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3520:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3502:37:87"
            },
            "returnParameters": {
              "id": 12597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3548:0:87"
            },
            "scope": 12633,
            "src": "3476:73:87",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12599,
              "nodeType": "StructuredDocumentation",
              "src": "3557:544:87",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "f712f3e8",
            "id": 12608,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165Interface",
            "nameLocation": "4116:25:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12601,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4150:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12608,
                  "src": "4142:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4142:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12603,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4166:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12608,
                  "src": "4159:18:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 12602,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4159:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4141:37:87"
            },
            "returnParameters": {
              "id": 12607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12606,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12608,
                  "src": "4202:4:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12605,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4202:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4201:6:87"
            },
            "scope": 12633,
            "src": "4107:101:87",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12609,
              "nodeType": "StructuredDocumentation",
              "src": "4216:318:87",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "b7056765",
            "id": 12618,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165InterfaceNoCache",
            "nameLocation": "4549:32:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12611,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4590:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12618,
                  "src": "4582:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4582:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12613,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4606:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12618,
                  "src": "4599:18:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 12612,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4599:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4581:37:87"
            },
            "returnParameters": {
              "id": 12617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12616,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12618,
                  "src": "4642:4:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12615,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4642:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4641:6:87"
            },
            "scope": 12633,
            "src": "4540:108:87",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 12626,
            "name": "InterfaceImplementerSet",
            "nameLocation": "4662:23:87",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12620,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4702:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12626,
                  "src": "4686:23:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4686:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12622,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "4727:13:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12626,
                  "src": "4711:29:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12621,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4711:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12624,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "4758:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12626,
                  "src": "4742:27:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4742:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4685:85:87"
            },
            "src": "4656:115:87"
          },
          {
            "anonymous": false,
            "id": 12632,
            "name": "ManagerChanged",
            "nameLocation": "4785:14:87",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12628,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4816:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12632,
                  "src": "4800:23:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4800:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12630,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "4841:10:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12632,
                  "src": "4825:26:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4825:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4799:53:87"
            },
            "src": "4779:74:87"
          }
        ],
        "scope": 12634,
        "src": "696:4160:87",
        "usedErrors": []
      }
    ],
    "src": "35:4823:87"
  },
  "legacyAST": {
    "absolutePath": "/D/00_TauDefi/github/taudefi-nft/contracts/lib/utils/introspection/IERC1820Registry.sol",
    "exportedSymbols": {
      "IERC1820Registry": [
        12633
      ]
    },
    "id": 12634,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12545,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:87"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 12546,
          "nodeType": "StructuredDocumentation",
          "src": "62:632:87",
          "text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
        },
        "fullyImplemented": false,
        "id": 12633,
        "linearizedBaseContracts": [
          12633
        ],
        "name": "IERC1820Registry",
        "nameLocation": "706:16:87",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 12547,
              "nodeType": "StructuredDocumentation",
              "src": "730:457:87",
              "text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
            },
            "functionSelector": "5df8122f",
            "id": 12554,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setManager",
            "nameLocation": "1202:10:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12549,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1221:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12554,
                  "src": "1213:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12551,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "1238:10:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12554,
                  "src": "1230:18:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1212:37:87"
            },
            "returnParameters": {
              "id": 12553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1258:0:87"
            },
            "scope": 12633,
            "src": "1193:66:87",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12555,
              "nodeType": "StructuredDocumentation",
              "src": "1267:94:87",
              "text": " @dev Returns the manager for `account`.\n See {setManager}."
            },
            "functionSelector": "3d584063",
            "id": 12562,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getManager",
            "nameLocation": "1376:10:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12557,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1395:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12562,
                  "src": "1387:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1386:17:87"
            },
            "returnParameters": {
              "id": 12561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12560,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12562,
                  "src": "1427:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1426:9:87"
            },
            "scope": 12633,
            "src": "1367:69:87",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12563,
              "nodeType": "StructuredDocumentation",
              "src": "1444:834:87",
              "text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "29965a1d",
            "id": 12572,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInterfaceImplementer",
            "nameLocation": "2293:23:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12565,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2325:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12572,
                  "src": "2317:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2317:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12567,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2342:14:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12572,
                  "src": "2334:22:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12566,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2334:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12569,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "2366:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12572,
                  "src": "2358:19:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2358:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2316:62:87"
            },
            "returnParameters": {
              "id": 12571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2387:0:87"
            },
            "scope": 12633,
            "src": "2284:104:87",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12573,
              "nodeType": "StructuredDocumentation",
              "src": "2396:390:87",
              "text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
            },
            "functionSelector": "aabbb8ca",
            "id": 12582,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInterfaceImplementer",
            "nameLocation": "2801:23:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12575,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2833:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12582,
                  "src": "2825:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2825:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12577,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2850:14:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12582,
                  "src": "2842:22:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12576,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2842:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2824:41:87"
            },
            "returnParameters": {
              "id": 12581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12580,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12582,
                  "src": "2889:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2889:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2888:9:87"
            },
            "scope": 12633,
            "src": "2792:106:87",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12583,
              "nodeType": "StructuredDocumentation",
              "src": "2906:200:87",
              "text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
            },
            "functionSelector": "65ba36c1",
            "id": 12590,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "interfaceHash",
            "nameLocation": "3121:13:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12585,
                  "mutability": "mutable",
                  "name": "interfaceName",
                  "nameLocation": "3151:13:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12590,
                  "src": "3135:29:87",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12584,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3134:31:87"
            },
            "returnParameters": {
              "id": 12589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12588,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12590,
                  "src": "3189:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12587,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3188:9:87"
            },
            "scope": 12633,
            "src": "3112:86:87",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12591,
              "nodeType": "StructuredDocumentation",
              "src": "3206:264:87",
              "text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
            },
            "functionSelector": "a41e7d51",
            "id": 12598,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateERC165Cache",
            "nameLocation": "3485:17:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12593,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3511:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12598,
                  "src": "3503:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3503:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12595,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3527:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12598,
                  "src": "3520:18:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 12594,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3520:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3502:37:87"
            },
            "returnParameters": {
              "id": 12597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3548:0:87"
            },
            "scope": 12633,
            "src": "3476:73:87",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12599,
              "nodeType": "StructuredDocumentation",
              "src": "3557:544:87",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "f712f3e8",
            "id": 12608,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165Interface",
            "nameLocation": "4116:25:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12601,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4150:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12608,
                  "src": "4142:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4142:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12603,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4166:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12608,
                  "src": "4159:18:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 12602,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4159:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4141:37:87"
            },
            "returnParameters": {
              "id": 12607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12606,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12608,
                  "src": "4202:4:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12605,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4202:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4201:6:87"
            },
            "scope": 12633,
            "src": "4107:101:87",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 12609,
              "nodeType": "StructuredDocumentation",
              "src": "4216:318:87",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "b7056765",
            "id": 12618,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165InterfaceNoCache",
            "nameLocation": "4549:32:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12611,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4590:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12618,
                  "src": "4582:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4582:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12613,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4606:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12618,
                  "src": "4599:18:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 12612,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4599:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4581:37:87"
            },
            "returnParameters": {
              "id": 12617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12616,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12618,
                  "src": "4642:4:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12615,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4642:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4641:6:87"
            },
            "scope": 12633,
            "src": "4540:108:87",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 12626,
            "name": "InterfaceImplementerSet",
            "nameLocation": "4662:23:87",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12620,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4702:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12626,
                  "src": "4686:23:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4686:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12622,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "4727:13:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12626,
                  "src": "4711:29:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12621,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4711:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12624,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "4758:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12626,
                  "src": "4742:27:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4742:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4685:85:87"
            },
            "src": "4656:115:87"
          },
          {
            "anonymous": false,
            "id": 12632,
            "name": "ManagerChanged",
            "nameLocation": "4785:14:87",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12628,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4816:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12632,
                  "src": "4800:23:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4800:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12630,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "4841:10:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 12632,
                  "src": "4825:26:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4825:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4799:53:87"
            },
            "src": "4779:74:87"
          }
        ],
        "scope": 12634,
        "src": "696:4160:87",
        "usedErrors": []
      }
    ],
    "src": "35:4823:87"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-11T01:47:46.982Z",
  "devdoc": {
    "details": "Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.",
    "kind": "dev",
    "methods": {
      "getInterfaceImplementer(address,bytes32)": {
        "details": "Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address."
      },
      "getManager(address)": {
        "details": "Returns the manager for `account`. See {setManager}."
      },
      "implementsERC165Interface(address,bytes4)": {
        "params": {
          "account": "Address of the contract to check.",
          "interfaceId": "ERC165 interface to check."
        },
        "returns": {
          "_0": "True if `account` implements `interfaceId`, false otherwise."
        }
      },
      "implementsERC165InterfaceNoCache(address,bytes4)": {
        "params": {
          "account": "Address of the contract to check.",
          "interfaceId": "ERC165 interface to check."
        },
        "returns": {
          "_0": "True if `account` implements `interfaceId`, false otherwise."
        }
      },
      "interfaceHash(string)": {
        "details": "Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
      },
      "setInterfaceImplementer(address,bytes32,address)": {
        "details": "Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."
      },
      "setManager(address,address)": {
        "details": "Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`."
      },
      "updateERC165Cache(address,bytes4)": {
        "params": {
          "account": "Address of the contract for which to update the cache.",
          "interfaceId": "ERC165 interface for which to update the cache."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "implementsERC165Interface(address,bytes4)": {
        "notice": "Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address."
      },
      "implementsERC165InterfaceNoCache(address,bytes4)": {
        "notice": "Checks whether a contract implements an ERC165 interface or not without using nor updating the cache."
      },
      "updateERC165Cache(address,bytes4)": {
        "notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
      }
    },
    "version": 1
  }
}